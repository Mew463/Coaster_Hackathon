/* Basic styling */
body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    margin: 0;
    padding: 20px;
    transition: background-color 0.3s, color 0.3s;
    align-items: center;
    text-align: center;
}

.container {
    width: 100%;
    max-width: 300px;
    margin: 0 auto;
    text-align: center;
    overflow: hidden;
    border-radius: 10px;
    border-left: 2px solid #ccc;
    border-right: 2px solid #ccc;
}

.menu {
    list-style-type: none;
    padding: 0;
}

.menu li {
    background-color: #f0f0f0;
    cursor: pointer;
    transition: background-color 0.3s, color 0.3s;
    
}
/* ------------------------------------------------------------------------------------------------------------------
 Dark and light theme specifics */
.light-theme {
    background-color: #fff;
    color: #333;
}

.light-theme .menu li,
.light-theme button {
    background-color: #f0f0f0;
    color: #333;
}

.dark-theme {
    background-color: #333;
    color: #fff;
}

.dark-theme .menu li,
.dark-theme button {
    background-color: #444;
    color: #fff;
}

/* Button styling */
button {
    padding: 10px;
    margin: 5px;
    background-color: #f0f0f0;
    border: none;
    border-radius: 1px;
    cursor: pointer;
    transition: background-color 0.3s, color 0.3s;
}

button:hover {
    background-color: #ddd;
}

.menu li button.button-active {
    background-color: #007BFF !important;
    color: white;
}
/* ------------------------------------------------------------------------------------------------------------------
Hidden optional elements */ 

.hidden {
    display: none; /* Hidden by default */
}

.options {
    margin-top: 20px;
    width: 100%;
    max-width: 300px;
    margin: 0 auto;
    text-align: center;
    overflow: hidden;
    border-radius: 10px;


}
.options h2 {
    
    color: #ffffff;
}

.options ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.option-item {
    display: block;
    padding: 12px 20px;
    background-color: #1c1c1e; /* Dark mode background */
    color: #ffffff; /* Text color for dark mode */
    border-bottom: 1px solid #48484a; /* Separator for dark mode */
    cursor: pointer;
    border-top: 10px;
    transition: background-color 0.3s;
}

.option-item:last-child {
    border-bottom: none;
}

.option-item:hover {
    background-color: #2c2c2e; /* Hover effect */
}

.selected {
    background-color: #007aff; /* Highlight the selected option */
    color: #ffffff;
}

.red-glow {
    background-color: #ff3b30; /* Red color */
    /*box-shadow: 0 0 10px #ff3b30; /* Glowing effect */
}

/* Add styles for the active button
.menu li button.button-active {
    background-color: #007BFF;
    color: #fff;
} */

/* ------------------------------------------------------------------------------------------------------------------*/

/* Basic and theme-specific styling remains the same */

.neon-background {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    z-index: -1; /* Make sure it's behind all other content */
}

.shape {
    position: absolute;
    border-radius: 50%;
    opacity: 0.7; /* Shapes are slightly see-through */
    animation: float 20s infinite alternate, changeColor 10s infinite alternate;
}

.shape1 {
    top: 10%;
    left: 20%;
    width: 100px;
    height: 100px;
}

.shape2 {
    top: 50%;
    left: 50%;
    width: 150px;
    height: 150px;
}

.shape3 {
    top: 70%;
    left: 10%;
    width: 80px;
    height: 80px;
}

@keyframes float {
    0% {
        transform: translate(0px, 0px);
    }
    50% {
        transform: translate(150px, -200px);
    }
    100% {
        transform: translate(-150px, 200px);
    }
}

@keyframes changeColor {
    0% { background-color: #ff0080; }
    25% { background-color: #ff00ff; }
    50% { background-color: #8000ff; }
    75% { background-color: #0040ff; }
    100% { background-color: #00ffff; }
}


/* Set initial state of elements to be transparent */
.fade-in {
    opacity: 0;
    animation: fadeInAnimation ease-in 1s;
    animation-fill-mode: forwards; /* This ensures that the element remains visible after the animation */
    animation-delay: 0.5s; /* Adjust as needed */
}

.fade-in-quick {
    opacity: 0;
    animation: fadeInAnimation ease-in 0.5s;
    animation-fill-mode: forwards; /* This ensures that the element remains visible after the animation */
    animation-delay: 0.5s; /* Adjust as needed */
}

/* Define the keyframes for the fade-in animation */
@keyframes fadeInAnimation {
    0% { opacity: 0; }
    100% { opacity: 1; }
}


    